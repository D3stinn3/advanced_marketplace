{
    "hints": {
        "allow_asset(pay,asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "first_deposit(pay,uint64,axfer,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "deposit(asset,axfer,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_price(asset,uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "withdraw(asset,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "buy(address,asset,uint64,pay,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYWR2YW5jZWRfbWFya2V0cGxhY2UuY29udHJhY3QuQWR2YW5jZWRNYXJrZXRwbGFjZS5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgLy8gc21hcnRfY29udHJhY3RzL2FkdmFuY2VkX21hcmtldHBsYWNlL2NvbnRyYWN0LnB5OjYKICAgIC8vIGNsYXNzIEFkdmFuY2VkTWFya2V0cGxhY2UoQVJDNENvbnRyYWN0KToKICAgIGludCAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "AdvancedMarketplace",
        "methods": [
            {
                "name": "allow_asset",
                "args": [
                    {
                        "type": "pay",
                        "name": "mbr_pay"
                    },
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "first_deposit",
                "args": [
                    {
                        "type": "pay",
                        "name": "mbr_pay"
                    },
                    {
                        "type": "uint64",
                        "name": "nonce"
                    },
                    {
                        "type": "axfer",
                        "name": "xfer"
                    },
                    {
                        "type": "uint64",
                        "name": "unitary_price"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "deposit",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "axfer",
                        "name": "xfer"
                    },
                    {
                        "type": "uint64",
                        "name": "nonce"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_price",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "nonce"
                    },
                    {
                        "type": "uint64",
                        "name": "unitary_price"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "withdraw",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "nonce"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "buy",
                "args": [
                    {
                        "type": "address",
                        "name": "owner"
                    },
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "nonce"
                    },
                    {
                        "type": "pay",
                        "name": "buy_pay"
                    },
                    {
                        "type": "uint64",
                        "name": "quantity"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}